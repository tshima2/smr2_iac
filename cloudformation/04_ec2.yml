AWSTemplateFormatVersion: 2010-09-09
Description: Smr2 template for EC2

Parameters:
  VPCStack:
    Type: String
    Default: smr2-cfn-vpc
  EC2AMI:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2
  KeyName:
    Description: input EC2 Keyname
    Type: AWS::EC2::KeyPair::KeyName

Resources:
  EC2WebServer01:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref EC2AMI
      InstanceType: t2.micro
      KeyName: !Ref KeyName
      SubnetId:
        Fn::ImportValue: !Sub ${VPCStack}-PublicSubnet1
      PrivateIpAddress: 10.0.1.10
      UserData: 
        Fn::Base64: !Sub
          - |
            #! /bin/bash
            ## create dotenv-file skelton
            APP_DIR=/var/www/smr2_app
            mkdir -p $APP_DIR
            cd $APP_DIR
            touch $APP_DIR/.env.production
            chown ec2-user:ec2-user .env.production
            cat << EOS >> $APP_DIR/.env.production
            SMR2_APP_DATABASE_HOST=${RdsDbEndPoint}
            SMR2_APP_DATABASE_USER=${RdsDbUser}
            SMR2_APP_DATABASE_PASSWORD=${RdsDbPassword}
            SMR2_APP_BUCKET_HOST="https://s3-ap-northeast-1.amazonaws.com"
            SMR2_APP_BUCKET_NAME=${S3BucketName}
            GOOGLEMAP_API_KEY=""
            SECRET_KEY_BASE=""
            AWS_ACCESS_KEY_ID=""
            AWS_SECRET_ACCESS_KEY=""
            EOS
          - {
            RdsDbEndPoint: !ImportValue smr2-cfn-rds-DBEndpoint,
            RdsDbUser: !ImportValue smr2-cfn-rds-DBUser,
            RdsDbPassword: !ImportValue smr2-cfn-rds-DBPassword,
            S3BucketName:  !ImportValue smr2-cfn-s3-BucketName
          }
      SecurityGroupIds:
        - !Ref EC2SG

  EC2WebServer02:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref EC2AMI
      InstanceType: t2.micro
      KeyName: !Ref KeyName
      SubnetId:
        Fn::ImportValue: !Sub ${VPCStack}-PublicSubnet2
      PrivateIpAddress: 10.0.2.10
      UserData:
        Fn::Base64: !Sub
          - |
            #! /bin/bash
            ## create dotenv-file skelton
            APP_DIR=/var/www/smr2_app
            mkdir -p $APP_DIR
            cd $APP_DIR
            touch $APP_DIR/.env.production
            chown ec2-user:ec2-user .env.production
            cat << EOS >> $APP_DIR/.env.production
            SMR2_APP_DATABASE_HOST=${RdsDbEndPoint}
            SMR2_APP_DATABASE_USER=${RdsDbUser}
            SMR2_APP_DATABASE_PASSWORD=${RdsDbPassword}
            SMR2_APP_BUCKET_HOST="https://s3-ap-northeast-1.amazonaws.com"
            SMR2_APP_BUCKET_NAME=${S3BucketName}
            GOOGLEMAP_API_KEY=""
            SECRET_KEY_BASE=""
            AWS_ACCESS_KEY_ID=""
            AWS_SECRET_ACCESS_KEY=""
            EOS
          - {
            RdsDbEndPoint: !ImportValue smr2-cfn-rds-DBEndpoint,
            RdsDbUser: !ImportValue smr2-cfn-rds-DBUser,
            RdsDbPassword: !ImportValue smr2-cfn-rds-DBPassword,
            S3BucketName:  !ImportValue smr2-cfn-s3-BucketName
          }
      SecurityGroupIds:
        - !Ref EC2SG

  EC2SG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: sg for web server
      VpcId:
        Fn::ImportValue: !Sub ${VPCStack}-VPCID
      SecurityGroupIngress:
        - IpProtocol: tcp
          CidrIp: 10.0.0.0/16
          FromPort: 80
          ToPort: 80
        - IpProtocol: tcp
          CidrIp: 0.0.0.0/0
          FromPort: 22
          ToPort: 22

Outputs:
  EC2WebServer01:
    Value: !Ref EC2WebServer01
    Export:
      Name: !Sub ${AWS::StackName}-EC2WebServer01
  EC2WebServer02:
    Value: !Ref EC2WebServer02
    Export:
      Name: !Sub ${AWS::StackName}-EC2WebServer02